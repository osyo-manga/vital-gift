*vital-gift.txt*	 ウィンドウに対して固有の番号を振り分けるプラグイン


==============================================================================
概要						*Vital.Gift-introduction*

タブページ、ウィンドウ番号を処理する汎用的な関数をまとめたプラグインです。

-Requires
 Vim version 7.3.895 以上


==============================================================================
インターフェース				*Vital.Gift-interface*

------------------------------------------------------------------------------
関数						*Vital.Gift-functions*

使用法				結果	説明	~

bufnr({tabpagenr}, {winnr})	数値	{tabpagenr}, {winnr} のバッ
					ファ番号
tabpagewinnr([{uniqwinnr}])	リスト	{uniqwinnr} の {tabpagenr} と {winnr}
					のリスト
tabpagewinnr_list()		リスト	タブページ、ウィンドウ番号のすべての
					組み合わせのリスト
uniq_winnr([{winnr}, {tabpagenr}])
				整数	{winnr}, {tabpagenr} のウィンドウのユ
					ニークなウィンドウ番号
winnr({uniqwinnr})		数値	{uniqwinnr} のウィンドウ番号
uniq_winnr_list()		リスト	開かれているすべてのユニークなウィン
					ドウ番号
find({string})			リスト	{string} にマッチするタブページ、ウィ
					ンドウ番号のリスト
jump_window({expr})		整数	{expr} のウィンドウへ移動する
close_window({expr})		整数	{expr} のウィンドウを閉じる
close_window_by({expr})		整数	{expr} にマッチするウィンドウを閉じる
execute({expr}, {execute})	整数	{expr} のウィンドウで {execute} を
					|:execute| する
getwinvar({uniqwinnr}, {varname} [, {def}])
				任意	{uniqwinnr} の {varname} または {def}
setwinvar({uniqwinnr}, {varname}, {val}])
					{uniqwinnr} の変数 {varname} に {val}
					を設定する
openable_bufnr_list()		リスト	いずれかのウィンドウで開かれているバッ
					ファのリスト


bufnr({expr})					*Vital.Gift.bufnr()*
	{expr} のバッファ番号を返します。
	{expr} には以下の値を渡すことができます。

	"ユニークなウィンドウ番号"         : 数値
	"[タブページ番号, ウィンドウ番号]" : リスト

tabpagewinnr([{uniqwinnr}])			*Vital.Gift.tabpagewinnr()*
	{uniqwinnr} のタブページ、ウィンドウ番号を返します。
	{uniqwinnr} にはユニークなウィンドウ番号が渡せます。
	{uniqwinnr} が渡されなかった場合はカレントのウィンドウが参照されます。


tabpagewinnr_list()			*Vital.Gift.tabpagewinnr_list()*
	開かれているタブページ、ウィンドウ番号のすべての組み合わせのリストを
	返す。
Example: >
	" [[タブページ, ウィンドウ番号], [タブページ, ウィンドウ番号],...]
	echo Vital.Gift.tabpagewinnr_list()
	" [[1, 1], [1, 2], [1, 3], [2, 1], [2, 2], [3, 1], [3, 2], [3, 3]]

uniq_winnr([{winnr}, {tabpagenr}])		*Vital.Gift.uniq_winnr()*
	ウィンドウ番号{winnr}, タブページ番号{tabpagenr} で開かれているウィ
	ンドウのユニークなウィンドウ番号を返します。
	このウィンドウ番号は１つのウィンドウに対して１つの番号が割り振られま
	す。
	この番号はウィンドウが開かれた順の番号とはかぎらないので注意してくだ
	さい。
	{winnr}, {tabpagenr} が渡されなければカレントのウィンドウが参照され
	ます。

winnr({uniqwinnr})				*Vital.Gift.winnr()*
	{uniqwinnr} のウィンドウ番号を返します。

uniq_winnr_list()				*Vital.Gift.uniq_winrnr_list()*
	開かれているウィンドウの |Vital.Gift.uniq_winnr()| の番号のリストを返します。
	このリストはソート済みとは限りません。

find({string})					*Vital.Gift.find()*
	{string} の条件マッチしたタブページ、ウィンドウ番号のリストを返します。
	{string} は |filter()| のように式を文字列で渡すことができます。
	{string} の式では捜査するウィンドウの以下の変数を使用することができま
	す。
	ローカル変数は使用できないので注意してください。

	"bufnr" : バッファ番号
	"tabnr" : タブページ番号
	"winnr" : ウィンドウ番号
Example: >
	" gift.vim という名前のバッファ名が開かれているウィンドウ位置を探す
	echo Vital.Gift.find("bufname(bufnr) == 'gift.vim'")
	" => [[2, 1], [2, 2]]

	" 最初に見つかったバッファ番号5 を閉じる
	echo Vital.Gift.close_window(get(Vital.Gift.find("bufnr == 5"), 0, []))
<

jump_window({expr})				*Vital.Gift.jump_window()*
	{expr} をカレントウィンドウに設定します。
	対象のウィンドウが存在しない場合は -1 を返します。
	{expr} には以下の値を渡すことができます。
	
	"ユニークなウィンドウ番号"         : 数値
	"[タブページ番号, ウィンドウ番号]" : リスト
Example: >
	" タブページ3、ウィンドウ番号2 をカレントウィンドウにする
	echo Vital.Gift.jump_window([3, 2])
<

close_window({expr} [, {closecmd}])		*Vital.Gift.close_window()*
	{expr} のウィンドウを閉じます。
	ウィンドウと閉じるコマンドは {closecmd} で指定することができます。
	デフォルトでは |:close| を使用します。
	対象のウィンドウが存在しない場合は -1 を返します。
	この関数は一旦 {expr} のウィンドウに移動する副作用があります。
	{expr} には以下の値を渡すことができます。
	
	"ユニークなウィンドウ番号"         : 数値
	"[タブページ番号, ウィンドウ番号]" : リスト
Example: >
	" タブページ3、ウィンドウ番号2 を閉じる
	echo Vital.Gift.close_window([3, 2])
<<

close_window_by({expr} [, {closecmd}])		*Vital.Gift.close_window_by()*
	{expr} の条件にマッチしたウィンドウを閉じます。
	それ以外は |Vital.Gift.close_window()| と同等の動作をします。
	{expr} には |Vital.Gift.find()| に渡す {string} と同じものが使用できます。


execute({expr}, {execute})			*Vital.Gift.execute()*
	{expr} のウィンドウに対して {execute} を |:execute| します。
	対象のウィンドウが存在しない場合は -1 を返します。
	この関数は一旦 {expr} のウィンドウに移動する副作用があります。
	{expr} には以下の値を渡すことができます。
	
	"ユニークなウィンドウ番号"         : 数値
	"[タブページ番号, ウィンドウ番号]" : リスト
Example: >
	" タブページ3、ウィンドウ番号2 に対して w:homu = 1 を設定する
	echo Vital.Gift.execute([3, 2], "let w:homu = 1")
<<

getwinvar({uniqwinnr}, {varname} [, {def}])	*Vital.Gift.getwinvar()*
	{uniqwinnr} の {varname} 変数を返します。
	変数が取得できなければ {def} を返します。
	{uniqwinnr} はユニークなウィンドウ番号を渡す。

setwinvar({uniqwinnr}, {varname}, {val}])	*Vital.Gift.setwinvar()*
	{uniqwinnr} の変数 {varname} に {val} を設定する
	{uniqwinnr} はユニークなウィンドウ番号を渡す。

openable_bufnr_list()			*Vital.Gift.openable_bufnr_list()*
	いずれかのウィンドウで開かれているバッファのリストを返します。
Example: >
	echo Vital.Gift.openable_bufnr_list()
	" => [4, 20, 5, 7, 6, 36]
<


==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
